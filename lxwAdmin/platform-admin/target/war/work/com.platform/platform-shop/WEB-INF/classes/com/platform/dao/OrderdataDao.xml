<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.OrderdataDao">

    <resultMap type="com.platform.entity.OrderdataEntity" id="orderdataMap">
        <result property="id" column="id"/>
        <result property="mid" column="mId"/>
        <result property="orderSn" column="order_sn"/>
        <result property="addTime" column="add_time"/>
        <result property="time" column="time"/>
        <result property="bargainTime" column="bargain_time"/>
        <result property="money" column="money"/>
        <result property="applyType" column="apply_type"/>
    </resultMap>

	<select id="queryObject" resultType="com.platform.entity.OrderdataEntity">
		select
			`id`,
			`mId`,
			`order_sn`,
			`add_time`,
			`time`,
			`bargain_time`,
			`money`,
			`apply_type`
		from nideshop_orderdata
		where id = #{id}
	</select>

	<select id="queryList" resultType="com.platform.entity.OrderdataEntity">
		select
    		`id`,
    		`mId`,
    		`order_sn`,
    		`add_time`,
    		`time`,
    		`bargain_time`,
    		`money`,
    		`apply_type`
		from nideshop_orderdata
		WHERE 1=1
		<if test="name != null and name.trim() != ''">
			AND name LIKE concat('%',#{name},'%')
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from nideshop_orderdata
		WHERE 1=1
        <if test="name != null and name.trim() != ''">
            AND name LIKE concat('%',#{name},'%')
        </if>
	</select>
	 
	<insert id="save" parameterType="com.platform.entity.OrderdataEntity" useGeneratedKeys="true" keyProperty="id">
		insert into nideshop_orderdata(
			`mId`,
			`order_sn`,
			`add_time`,
			`time`,
			`bargain_time`,
			`money`,
			`apply_type`)
		values(
			#{mid},
			#{orderSn},
			#{addTime},
			#{time},
			#{bargainTime},
			#{money},
			#{applyType})
	</insert>
	 
	<update id="update" parameterType="com.platform.entity.OrderdataEntity">
		update nideshop_orderdata 
		<set>
			<if test="mid != null">`mId` = #{mid}, </if>
			<if test="orderSn != null">`order_sn` = #{orderSn}, </if>
			<if test="addTime != null">`add_time` = #{addTime}, </if>
			<if test="time != null">`time` = #{time}, </if>
			<if test="bargainTime != null">`bargain_time` = #{bargainTime}, </if>
			<if test="money != null">`money` = #{money}, </if>
			<if test="applyType != null">`apply_type` = #{applyType}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from nideshop_orderdata where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from nideshop_orderdata where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>